// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  createdAt DateTime @default(now())
  orders    Order[]
}

model Product {
  id          String         @id @default(uuid())
  name        String
  description String
  price       Float
  stock       Int
  isActive    Boolean        @default(true)
  createdAt   DateTime       @default(now())
  orders      OrderProduct[]
}

/// El campo `status` se inicializa como `"pending"` por defecto.
/// Aunque el enunciado menciona que se debe capturar el estado del pedido (punto 3c),
/// en ningún lugar se indica que deba cambiar como parte del flujo.
/// Por lo tanto, no se implementó alguna lógica para modificar su valor.

model Order {
  id        String         @id @default(uuid())
  userId    String
  user      User           @relation(fields: [userId], references: [id])
  status    String         @default("pending")
  createdAt DateTime       @default(now())
  items     OrderProduct[]
}

model OrderProduct {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
